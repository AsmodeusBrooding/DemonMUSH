<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, March 01, 2019, 7:16 AM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "AA_Soul_Reaper" generated by Plugin Wizard -->

<muclient>
<plugin
   name="AA_demonMUSH_Ghost"
   author="Soth"
   id="5616683494ca66ebdf6f3372"
   language="Lua"
   purpose="A virtual assistant for the game Alter Aeon."
   date_written="2019-03-01 07:15:08"
   requires="4.92"
   save_state = "y"
   version="1.1"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
------------------------------------------------------------------------------------
-- Section: Init Config
------------------------------------------------------------------------------------
  <trigger
   enabled="y"
   match="kxwt_rvnum *"
   send_to="12"
   sequence="100"
  >
  <send>roomVnum = %1
		</send></trigger>
  <trigger
   enabled="y"
   match="pxnmYour name is *, and your fight string is *."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>playerName = "%2"
		purplePrint("A Ghost emerges from a breach between this world and the nether.")
		if spellBook["soulsteal"]["learned"] == true then
			DoAfterSpecial(1,"ghostPrint('Hello '..playerName..'. My purpose is to assist and guide you in your travels.')", sendto.script)
			DoAfterSpecial(1,"ghostPrint('I see you are versed in the arts of soulsteal. To automatically capture souls when the spell dread portent is active, type: ghost soulsteal')", sendto.script)
		else
			DoAfterSpecial(1,"ghostPrint('Hello '..playerName..', I am Ghost, your faithful assistant. To learn more, type: ghost help')", sendto.script)
		end</send></trigger>
------------------------------------------------------------------------------------
-- Section: Soulsteal
------------------------------------------------------------------------------------
  <trigger
   enabled="y"
   match="* is mortally wounded, and will die soon if not aided."
   send_to="12"
   sequence="100"
  >
  <send>if ghostAllowSoulsteal == true then
			Send("cast soulsteal")
		end</send></trigger>
  <trigger
   enabled="y"
   match="You cast the spell to separate soul from body, and pull * essence into a * soulstone!"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%2") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You cast the spell to separate soul from body, and pull %1 essence into a %2 soulstone!")
		</send></trigger>
  <trigger
   enabled="y"
   match="( 0)* * gemstone lies on the ground here."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%2") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","%1 %2 gemstone lies on the ground here.")
		</send></trigger>
  <trigger
   enabled="y"
   match="You get a * soulstone."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You get a %1 soulstone.")
		</send></trigger>
  <trigger
   enabled="y"
   match="You drop a * soulstone."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You drop a %1 soulstone.")
		</send></trigger>
  <trigger
   enabled="y"
   match="You put a * soulstone in *."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You put a %1 soulstone in %2.")
		</send></trigger>
  <trigger
   enabled="y"
   match="You get a * soulstone from *."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You get a %1 soulstone from %2.")
		</send></trigger>
  <trigger
   enabled="y"
   match="You bind a * soulstone to the skeleton, strengthening it and turning it into * skeletal knight!"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You bind a %1 soulstone to the skeleton, strengthening it and turning it into %1 skeletal knight!")
		</send></trigger>
  <trigger
   enabled="y"
   match="(using a * soulstone)"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","(using a %1 soulstone)")
		</send></trigger>
  <trigger
   enabled="y"
   match="You chant a spell to magically bind a * soulstone to *."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You chant a spell to magically bind a %1 soulstone to A prepared vampire corpse.)")
		</send></trigger>
  <trigger
   enabled="y"
   match="You make a mistake, the preparation fails, and a * soulstone is lost."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You make a mistake, the preparation fails, and a %1 soulstone is lost.")
		</send></trigger>
  <trigger
   enabled="y"
   match="a * soulstone"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","a %1 soulstone")
		</send></trigger>
  <trigger
   enabled="y"
   match="(   *) a * soulstone"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%2") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","(   %1) a %2 soulstone")
		</send></trigger>
  <trigger
   enabled="y"
   match="You buy a * soulstone for * gold coins."
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>for k, v in pairs(soulstonePalette) do
			for i in string.gmatch(k, "%1") do
				soulstoneColor = soulstonePalette[k]
			end
		end
		ColourNote(soulstoneColor,"black","You buy a %1 soulstone for %2 gold coins.")
		</send></trigger>
  <trigger
   enabled="y"
   match="pxss        soulsteal                             * *%"
   send_to="12"
   omit_from_output="y"
   sequence="100"
  >
  <send>spellBook["soulsteal"]["learned"] = true
		spellBook["soulsteal"]["progress"] = %2</send></trigger>
------------------------------------------------------------------------------------
-- Section: Sticky Items
------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
-- Section: Shopkeeper
------------------------------------------------------------------------------------


</triggers>

<!--  Timers  -->

<timers>
  <timer name="playerWarn" enabled="y" second="1.00" offset_second="0.00" send_to="12">
  <send>if initGhost == false and roomVnum ~= "null" then
			initGhost = true
			Send "spells | grep soulsteal |prefix pxss"
			Send "name | grep fight |prefix pxnm"
		end
		if playerName ~= "default" then
			
		end
		SaveState()</send></timer>
		
  <timer name="update" enabled="y" second="1.00" offset_second="0.00" send_to="12">
  <send>
  </send></timer>
</timers>

<!--  Aliases  -->

<aliases>
  <alias
   match="ghost *"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>userInput = "%1"
		examineInput = {}
		examineInputLength = 0
		for i in string.gmatch(userInput, "%S+") do
			table.insert(examineInput, i)
			examineInputLength = examineInputLength + 1
		end
		for i in string.gmatch(userInput, "soul") do
			if examineInputLength &lt; 2 then
				if ghostAllowSoulsteal == false then
					ghostAllowSoulsteal = true
					ghostPrint("Soul Reaper is now active.")
				else
					ghostAllowSoulsteal = false
					ghostPrint("Soul Reaper is no longer active.")
				end
			end
		end
		tprint(examineInput)
		if examineInputLength == 1 then
			ghostInspectAction = examineInput[1]
			if ghostSendEcho == true then
				redPrint("ghost >>"..ghostInspectAction)
			end
			for i in string.gmatch(ghostInspectAction, "help") do
				ghostSendHelp = true
			end
			if ghostSendHelp == true then
				ghostSendHelp = false
				print("")
				indigoPrint("General Ghost Usage")
				for i = 1, ghostHelpLength do
					purplePrint("  "..ghostHelp["keywords"]["help"]["General Ghost Usage"][i])
				end
			end
			
		elseif examineInputLength == 2 then
			ghostInspectAction = examineInput[1]
			ghostInspectAction2 = examineInput[2]
			if ghostSendEcho == true then
				redPrint("ghost >>"..ghostInspectAction2)
			end
			for i in string.gmatch(ghostInspectAction, "help") do
				ghostSendHelp = true
			end
			for k, v in pairs(ghostCommands) do
					for i in string.gmatch(ghostCommands[k], ghostInspectAction2) do
						ghostInspectAction2 = ghostCommands[k]
						ghostValidCommand = true
					end
			end
			if ghostValidCommand == true then
				ghostValidCommand = false
				if string.len(ghostInspectAction2) &gt; 1 then
					if ghostSendHelp == true then
						ghostSendHelp = false
						for k, v in pairs(ghostHelp) do
							tprint( ghostHelp[k][ghostInspectAction2])
						end
					end
				else
					redPrint("Help page '"..ghostInspectAction2.."' not found.")
					ghostPrint("You must type at least two letters of a word to search a specific help file. ")
				end
			end
			
		elseif examineInputLength == 4 then
			ghostInspectAction = examineInput[1]
			ghostInspectAction2 = tonumber(examineInput[2])
			ghostInspectAction3 = examineInput[3]
			ghostInspectAction4 = tonumber(examineInput[4])
			if ghostSendEcho == true then
				redPrint("ghost >>"..ghostInspectAction2.." "..ghostInspectAction3.." "..ghostInspectAction4)
			end
			for i in string.gmatch(ghostInspectAction, "shop") do
				ghostSendShop = true
			end
			if ghostSendShop == true then
				ghostSendShop = false
				for i = 1, ghostInspectAction2 do
					Send("get "..ghostInspectAction3.." nether")
					Send("shopkeep add "..ghostInspectAction3.." "..ghostInspectAction4)
					if i == tonumber(ghostInspectAction2) then
						if ghostInspectAction2 == 1 then
							ghostPrint("Attempting to add "..ghostInspectAction2.." "..ghostInspectAction3.." to your shop's inventory for "..ghostInspectAction4.." gold coins.")
						else
							ghostPrint("Attempting to add "..ghostInspectAction2.." "..ghostInspectAction3.."'s to your shop's inventory for "..ghostInspectAction4.." gold coins each.")
						end
					end
				end
			end
		end
		
		if userInput == "echo" then
			if ghostSendEcho == false then
				ghostSendEcho = true
				ghostPrint("Command echo has been enabled.")
			else
				ghostSendEcho = false
				ghostPrint("Command echo has been disabled.")
			end
		elseif userInput == "commands" then
			tprint(ghostCommands)
		elseif userInput == "changes" then
			tprint(ghostChanges)
		elseif userInput == "clear" then
			SetVariable("initGhost", false)
			ghostInspectAction = "null"
		end
  </send></alias>
 <alias
   match="cv ghost"
   enabled="y"
   group="champagneFarmer"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>
	purplePrint("***^._.^*** | Ghost ANALYSIS: ----------------------------- | ***^._.^***")
	if playerName ~= "default" then 
		print("            | Player Name           :          ",playerName)
	else
		print("            | Player name not set!")
	end
	print("            | initGhost             :          ",initGhost)
	print("            | checkEnemyHealth      :          ",checkEnemyHealth)
	purplePrint("***^._.^*** | --------------------------------------------- | ***^._.^***")</send></alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[
----------------------------------------------------------------------------------------
-- Requirements
----------------------------------------------------------------------------------------
--require "tprint"
----------------------------------------------------------------------------------------
-- Functions
----------------------------------------------------------------------------------------
	function OnPluginInstall()
		ColourNote ("white", "indigo", "Demon Ghost has been installed. Type 'ghost help' to learn more.")
	end
	-- The following is a modified version of Nick Gammons tprint.lua
	function tprint (t, indent, done)
		-- in case we run it standalone
		local Note = Note or print
		local Tell = Tell or io.write

		-- show strings differently to distinguish them from numbers
		local function show (val)
			if type (val) == "string" then
				return '"' .. val .. '"'
			else
				return tostring (val)
			end -- if
		end -- show
		-- entry point here
		done = done or {}
		indent = indent or 0
		for key, value in pairs (t) do
			Tell (string.rep (" ", indent)) -- indent it
			if type (value) == "table" and not done [value] then
				done [value] = true
				showKey = (show (key))
				print("")
				ColourNote("ghostwhite","indigo",showKey..":");
				tprint (value, indent + 2, done)
			else
				showKey = (show (key))
				showValue = (show (value))
				ColourNote( "darkviolet","black",showKey.." : "..showValue)
			end
		end
	end
	function ghostPrint(msg)
		ColourNote("darkviolet","black","A Ghost tells you, '"..msg.."'")
	end
	function indigoPrint(msg)
		ColourNote("ghostwhite","indigo",msg)
	end
	function purplePrint(msg)
		ColourNote("darkviolet","black",msg)
	end
	function redPrint(msg)
		ColourNote("#B22222","black",msg)
	end
	function silverPrint(msg)
		ColourNote("silver","black",msg)
	end
	function violetPrint(msg)
		ColourNote("#8A2BE2","#4B0082",msg) -- violet and indigo
	end
	
----------------------------------------------------------------------------------------
-- Global Variables
----------------------------------------------------------------------------------------

initGhost = false
ghostAllowSoulsteal = false
ghostTips = true
ghostSendHelp = false
ghostSendShop = false
ghostSendEcho = true
ghostValidCommand = false

ghostCaptureLength = 0
playerName = "default"
roomVnum = "null"

checkEnemyeHEalth = false

----------------------------------------------------------------------------------------
-- Tables
----------------------------------------------------------------------------------------
	ghostCommands = {
		[1] = "commands",
		[2] = "help",
		[3] = "changes",
		[4] = "clear",
		[5] = "soulsteal",
		[6] = "echo",
	}
	spellBook = {
		["soulsteal"] = {
			["learned"] = false,
			["progress"] = 0
		}
	}
	soulstonePalette = {
		["red"] = "red",
		["yellow"] = "yellow",
		["green"] = "green",
		["pale blue"] = "skyblue",
		["deep blue"] = "blue",
		["purple"] = "blueviolet",
		["clear"] = "linen",
		["white"] = "ghostwhite",
		["pitch black"] = "darkslategray",
	}
	
	ghostHelpLength = 6
	ghostHelp = {
		["keywords"] = {
			["help"] = {
				["General Ghost Usage"] = {
					[1] = "ghost help - Shows this help file.",
					[2] = "ghost help <keyword> - Searches Ghost's help file for a specific topic.",
					[3] = "ghost commands - Displays list of current Ghost commands.",
					[4] = "ghost clear - Clears certain Ghost variables.",
					[5] = "ghost echo - Toggles Ghost command echo.",
					[6] = "ghost soulsteal - Toggles Soul Reaper (automatic soul stealing).",
				},
			},
			["commands"] = {
				["Commands"] = {
					["info"] = "Displays list of current Ghost commands.",
					["format"] = "ghost commands",
				},
			},
			["changes"] = {
				["Changes"] = {
					["info"] = "Displays change log.",
					["format"] = "ghost changes",
				},
			},
			["clear"] = {
				["Clear"] = {
					["info"] = "Clears certain Ghost variables (mostly used for debugging).",
					["format"] = "ghost clear",
				},
			},
			["echo"] = {
				["Echo"] = {
					["info"] = "Toggles Ghost command echo.",
					["format"] = "ghost echo",
				},
			},
			["soulsteal"] = {
				["Soulsteal"] = {
					["info"] = "Toggles Soul Reaper (automatic soul stealing).",
					["format"] = "ghost soulsteal",
				},
			},
		}
	}
	
--MEASURE>80 chrs "^                                                                              ^"
	ghostChanges = {
		["version_1.0"] = {
			[0] = "3/1/2019",
			[1] = "Drew up the outline for Ghost.",
			[2] = "Added alias 'ghost <input>' to interface with Ghost. (ie. 'ghost help')",
			[3] = "Added 'ghost clear' to clear variables",
			[4] = "Configure name capture with update timer on install, reinstall, and login.",
			[5] = "Send welcome message to player ***NEED> if kxwt for roomVnum is set.",
			[6] = "Added table spellBook to keep track of spells relevant to Ghost.",
			[7] = "Detect spell soulsteal and add to spellBook.",
			[8] = "Added alias 'ghost soulsteal' to auto-attempt to soulsteal dying enemies.",
			[9] = "Added table 'soulstonePalette' to set soulstone output to correct color.",
			[10] = "Added customized soulstone color notes for most soulstone output.",
			
		},
		["version_1.1"] = {
			[0] = "3/2/2019",
			[1] = "Added alias 'ghost changes' to show Ghost's changelog.",
			[2] = "Allow keyword parameter to Ghost's help file search (ie. ghost help <keyword>)",
			[3] = "Added table ghostCommands to check against user input.",
			[4] = "Customized more soulstone output color (ie. soulstones in inventory)",
			--[5] = "",
			--[6] = "",
			--[7] = "",
			--[8] = "",
			--[9] = "",
			--[10] = "",	
		},

	}
	
	ghostPlayerLevels = {}
]]>
</script>


</muclient>
