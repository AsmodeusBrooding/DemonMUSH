<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<!-- Plugin "CODclient Handler" generated by Plugin Wizard -->

<!-- Made for Cleft of Dimensions -->


<muclient>
<plugin
   name="CleftMUSH_COD_Handler"
   author="Asmodeus"
   id="04d9e64f835453c045b427b2"
   language="Lua"
   purpose="Multipurpose Utility"
   save_state="y"
   date_written="2019-01-04"
   requires="4.00"
   version="1.1"
   >

<description trim="y">
Multipurpose utility with sounds

</description>

</plugin>
<triggers>
 <trigger
   enabled="y"
   match="^kxwt\_time (\d+) ([a-zA-Z]+) (\d+)\:(\d+) (am|pm)$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
atold1 = at1
at1 = "%3"
at2 = "%4"
at3 = "%5"
atd = "%2"
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^kxwt\_waypoint$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
<send>
Sound("stop=all")
musicPlaying = false
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^kxwt_emote (.*)$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="1"
  >
  <send>
Note("%1")
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^kxwt\_group\_start$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
kplayers={}
kminions={}
kotherminions={}
kpcount = 0
</send>
  </trigger>
  <trigger
   enabled="y"
   match="^kxwt\_group\_end$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
--
</send>
  </trigger>
   <trigger
 enabled="y"
 match="^kxwt_spellup (.*)"
regexp="y"
 send_to="14"
 sequence="99"
omit_from_output="y"
 >

 </trigger>
<trigger
 enabled="y"
 match="kxwt_audio *"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="kxwt_action *"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="Set it to NULL to delete."
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="kxwt_rshort *"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="kxwt_id_start"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="kxwt_id_end"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>

<trigger
 enabled="y"
 match="kxwt_sky *"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="kxwt_spst *"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
<trigger
 enabled="y"
 match="Your current channel prefix is now '[]'"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_time (-{0,1}\d+) (\w+) (\w+)"
 regexp="y"
 sequence="100"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="kxwt_fighting *"
 omit_from_output="y"
 omit_from_log="y"
 send_to="14"
 sequence="100"
 >
</trigger>
 <trigger
 enabled="y"
 match="kxwt_mdeath *"
 omit_from_output="y"
 omit_from_log="y"
 send_to="14"
 sequence="100"
 >
</trigger>
 <trigger
 enabled="y"
 match="kxwt_ydeath *"
 omit_from_output="y"
 omit_from_log="y"
 send_to="14"
 sequence="100"
 >
</trigger>
 <trigger
 enabled="y"
 match="kxwt_pdeath *"
 omit_from_output="y"
 omit_from_log="y"
 send_to="14"
 sequence="100"
 >
</trigger>
 <trigger
 enabled="y"
 match="^kxwt_spelldown (.*)"
regexp="y"
 send_to="14"
 sequence="99"
omit_from_output="y"
 >

 </trigger>
  <trigger
   enabled="n"
   match="^kxwt_walkdir (\d+)"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >

  </trigger>
   <trigger
   enabled="y"
   match="^kxwt_group (?P&lt;hp&gt;-?\d+) (?P&lt;mhp&gt;\d+) (?P&lt;mn&gt;-?\d+) (?P&lt;mmn&gt;\d+) (?P&lt;mv&gt;-?\d+) (?P&lt;mmv&gt;\d+) (?P&lt;tag&gt;\S+) (?P&lt;name&gt;.*)"
   omit_from_output="y"
   regexp="y"
   sequence="100"
  >
  </trigger>

  <trigger
   enabled="y"
   match="A blood red winged demon claws at *!"
   omit_from_output="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="^kxwt_rvnum (\d+)"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  </trigger>
  <trigger
   enabled="y"
   match="kxwt_supported"
   omit_from_output="y"
   sequence="100"
  >
  <send>set kxwt on
set cprefix ~R~H[]~O</send>
  </trigger>
<trigger
 enabled="y"
 match="kxwt_idle"
 omit_from_output="y"
 omit_from_log="y"
 sequence="100"
 >
<send>l</send>
 </trigger>
    <trigger
   enabled="y"
   match="kxwt_nocast"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
  <send>
nocastroom=true
</send>
</trigger>
 <trigger
   enabled="y"
   match="kxwt_expcap *"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
  <send>k_cap=tonumber("%1")</send>
  </trigger>
  <trigger
   enabled="y"
   match="kxwt_obj_zap *"
   omit_from_output="y"
   send_to="14"
   sequence="100"
  >
  <send>
print ZAPPED
</send>
  </trigger>
  <trigger
 enabled="y"
 match="^kxwt_prompt (-{0,1}\d+) (-{0,1}\d+) (-{0,1}\d+) (-{0,1}\d+) (-{0,1}\d+) (-{0,1}\d+)"
sequence="1"
regexp="y"
 send_to="14"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_area (-{0,1}\d+) (.*)"
sequence="3"
regexp="y"
 send_to="14"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_area -1\s*"
sequence="2"
regexp="y"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_exp (-{0,1}\d+)"
sequence="1"
regexp="y"
 send_to="14"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_terrain (-{0,1}\d+)"
sequence="1"
regexp="y"
 send_to="14"
omit_from_output="y"
 omit_from_log="y"
 >
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_gold (-{0,1}\d+)"
sequence="1"
regexp="y"
omit_from_output="y"
omit_from_log="y"
send_to="14"
 >
 </trigger>
 <trigger
 enabled="y"
 match="kxwt_position *"
sequence="1"
omit_from_output="y"
omit_from_log="y"
send_to="14"
 >
</trigger>
 <trigger
   enabled="y"
   match="^\*pong\*$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
  Send("pang")
  </send>
  </trigger>

  <trigger
   enabled="y"
   match="^\*pingtime (\d+)\*$"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   send_to="14"
   sequence="100"
  >
  <send>
  lag = tonumber("%1")
  if lag &lt; 999.5 then
   lag = (math.floor(lag+0.5)).." ms"
  elseif lag &lt; 9999.5 then
   lag = (math.floor(lag/10+0.5)/100).." s"
  else
   lag = (math.floor(lag/100+0.5)/10).." s"
  end
  if lagbrag then
   Send(lagbrag.." I currently have a connection lag of "..lag..".")
   lagbrag = nil
  else
   Note("Lag: "..lag)
  end
  </send>
  </trigger>
 <trigger
 enabled="y"
 match="lagcheck"
 omit_from_output="y"
keep_evaluating="y"
 sequence="100"
 >
 </trigger>

-----------------------------------------------------------------------------------
-- FAME SECTION
-----------------------------------------------------------------------------------

  <trigger
   enabled="y"
   match="^\( 6\)A wino sits on the ground, a bottle in his hand\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"white","black", "( 6)",
"yellow", "black", "(FAME)",
"darkcyan", "black", " A wino sits on the ground, a bottle in his hand.")  </send>
  </trigger>

  <trigger
   enabled="y"
   match="^A gypsy wino is DEAD\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"mediumpurple", "black", "You will gain a ",
"yellow","black", "(FAME)",
"mediumpurple", "black", " point for killing A gypsy wino!") </send>
  </trigger>

  <trigger
   enabled="y"
   match="^\( 6\)An old man rests on a stool\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"white","black", "( 6)",
"yellow", "black", "(FAME)",
"darkcyan", "black", " An old man rests on a stool.")  </send>
  </trigger>

  <trigger
   enabled="y"
   match="^An elderly gypsy man is DEAD\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"mediumpurple", "black", "You will gain a ",
"yellow","black", "(FAME)",
"mediumpurple", "black", " point for killing An elderly gypsy man!") </send>
  </trigger>
  <trigger
   enabled="y"
   match="^\( 6\)A woman chats with her friend\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"white","black", "( 6)",
"yellow", "black", "(FAME)",
"darkcyan", "black", " A woman chats with her friend.")  </send>
  </trigger>

  <trigger
   enabled="y"
   match="^An excited gypsy woman is DEAD\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"mediumpurple", "black", "You will gain a ",
"yellow","black", "(FAME)",
"mediumpurple", "black", " point for killing An excited gypsy woman!") </send>
  </trigger>
  <trigger
   enabled="y"
   match="^\( 6\)A wizard is here, studying a magic tome\.$"
   omit_from_output="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"white","black", "( 6)",
"yellow", "black", "(FAME)",
"darkcyan", "black", " A wizard is here, studying a magic tome.")  </send>
  </trigger>

  <trigger
   enabled="y"
   match="^A travelling magician is DEAD\!$"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourTell (
"mediumpurple", "black", "You will gain a ",
"yellow","black", "(FAME)",
"mediumpurple", "black", " point for killing A travelling magician!") </send>
  </trigger>


-----------------------------------------------------------------------------------
-- COLORS SECTION
-----------------------------------------------------------------------------------

 <trigger
 enabled="y"
 match="kxwt_edeath *"
 omit_from_output="y"
 omit_from_log="y"
 send_to="14"
 sequence="100"
 >
<send>ColourNote("red", "", "GROUP: %1 has just been KILLED!")</send>
</trigger>

  <trigger
   enabled="y"
   match="You drive a stake through *'s shadow, pinning it in place!"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("blueviolet", "", "You drive a stake through %1 shadow, pinning it in place!")</send>
  </trigger>
  <trigger
   enabled="y"
   match="Your sickening touch spreads to * as you hit it!"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("lime", "", "Your sickening touch spreads to %1 as you hit it!")</send>
  </trigger>
  <trigger
   enabled="y"
   match="* concentrates, and conjures a huge wall of ice."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("cyan", "", "%1 concentrates, and conjures a huge wall of ice.")</send>
  </trigger>
  <trigger
   enabled="y"
   match="The white aura around your body fades."
   omit_from_output="n"
   send_to="12"
   sequence="100"
  >
  <send>ColourNote("yellow", "", "WARNING: SANCTUARY DOWN")</send>
  </trigger>
  <trigger
   enabled="y"
   match="Double mob experience is now enabled!"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>
ColourNote("lime", "black", "---------------------------")
ColourNote("lime", "black", "| DOUBLE EXP MODE ENABLED |")
ColourNote("lime", "black", "---------------------------")
</send>
  </trigger>
  <trigger
   enabled="y"
   match="Double experience caps for mob kills are now enabled!"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>
ColourNote("lime", "black", "---------------------------")
ColourNote("lime", "black", "| DOUBLE CAP MODE ENABLED |")
ColourNote("lime", "black", "---------------------------")
</send>
  </trigger>




-----------------------------------------------------------------------------------
-- SOUNDS SECTION 
-----------------------------------------------------------------------------------
 <trigger
 enabled="y"
 match="[SND_COD_*]"
 sequence="100"
 omit_from_output="y"
 send_to="14"
 >
<send>
Sound ("sounds/COD_%1.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="* replies to you, '*'"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/tell.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You buy * for * gold coins."
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/Purchase.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You get * from the corpse of *"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/Item.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="^kxwt_walkdir (\d+)"
 regexp="y"
 omit_from_output="y"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/Walk.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="Your leaping attack *** DEMOLISHES *** *!"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/demolishleap.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You close *."
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/door.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You open *."
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/door.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You cleave through your enemies!"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/cleave.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="* (unique)"
regexp="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/random.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 match="You begin casting Nar's famous spell..."
regexp="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/rottingsphere.wav") 
</send>
 </trigger>
<trigger
 enabled="y"
 match="* throws * head back and cackles with insane glee."
regexp="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/cackle.wav") 
</send>
 </trigger>
<trigger
 enabled="y"
 match="You throw your head back and cackle with insane glee."
regexp="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/cackle.wav") 
</send>
 </trigger>
<trigger
 enabled="y"
 match="The white aura around your body fades."
regexp="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/sancfall.wav") 
</send>
 </trigger>
 <trigger
 enabled="y"
 group="generalSounds"
 match="* is DEAD!"
 keep_evaluating="y"
 omit_from_output="n"
 sequence="100"
 send_to="14"
 >
<send>
Sound ("sounds/death.mp3")
</send>
 </trigger>

------------------------------------------------------------------------------------
-- MUSIC SECTION
------------------------------------------------------------------------------------
 <trigger
 enabled="y"
 match="Soth's Splendiferous Storefront - http://alteraeon.com:8080/shops/45301"
 regexp="n"
 omit_from_output="n"
 sequence="100"
 send_to="14"
 >
<send>if musicPlaying == false then
				musicPlaying = true
				Sound("loop=sounds/Sothstore.mp3")
  		end -- if musicPlaying
</send>
 </trigger>
 <trigger
 enabled="y"
 match="kxwt_area 5400 Underwater ruins, watery passages"
 regexp="n"
 omit_from_output="y"
 sequence="1"
 send_to="14"
 >
  <send>if musicPlaying == false then
			musicPlaying = true
			Sound("loop=sounds/uw_ruins.mp3")
		end -- if musicPlaying</send></trigger>
</triggers>
------------------------------------------------------------------------------------
-- ALIASES SECTION 
------------------------------------------------------------------------------------

   <aliases>
   <alias
   match="kxwt_area --printareanumber"
	send_to="12"
   enabled="y"
   sequence="100"
  >
<send>Note(areanumber)</send></alias>
   <alias
   match="mute"
	send_to="12"
   enabled="y"
   sequence="100"
  >
<send>Sound("stop=all")
musicPlaying = false
   ColourNote ("yellow", "", "Current Music Stopped.")
</send>
</alias>

  <alias
   match="dbn"
send_to="12"
   enabled="y"
   sequence="100"
  >
  <send>if debugging==1 then
			debugging=0
			Note("debugging disabled")
		else
			Note("debugging enabled")
			debugging=1
		end</send></alias>
  <alias
   match="dbn"
	send_to="12"
   enabled="y"
   sequence="100"
  >
  <send>if debugging==1 then
			debugging=0
			Note("debugging disabled")
		else
			Note("debugging enabled")
			debugging=1
		end</send></alias>
  <alias
   match="random * *"
	send_to="12"
   enabled="y"
   sequence="100"
  >
  <send>print(random(%1,%2))</send></alias>

 <alias
 match="lag"
 enabled="y"
 send_to="12"
 sequence="100"
 >
 <send>
lagbrag = nil
Send("ping")
</send>
 </alias>
 <alias
 match="brag * lag"
 enabled="y"
 send_to="12"
 sequence="100"
 >
 <send>
lagbrag="%1"
Send("ping")
</send>
 </alias>

  </aliases>
  


<!--  Script  -->

<script>
<![CDATA[
uid=""
musicPlaying = false
function OnPluginInstall()
  uid=GetVariable("id")
  if(uid==NIL) then
    uid=GetUniqueID()
  end
end
function OnPluginSaveState ()
  SetVariable("id",uid)
end

function random(num1, num2)
	math.randomseed(os.time())
	math.random(); math.random();
	math.random(); math.random();
	randomNumber =  math.random(num1, num2)
	return randomNumber
end
	

]]>
</script>
</muclient>
